{
  "name": "encrypted.dev",
  "version": "0.0.1",
  "description": "An end-to-end encrypted framework for web and mobile apps.",
  "main": "./proof-of-concept/server/app.js",
  "scripts": {
    "postinstall": "if test \"$RUNNING_ENV\" != \"CI\"; then npm-run-all -p install:sdk install:server install:admin-panel && npm run install:poc; fi;",
    "install:sdk": "cd ./src/userbase-js && npm install",
    "install:server": "cd ./src/userbase-server && npm install",
    "install:admin-panel": "cd ./src/userbase-server/admin-panel && npm install",
    "install:poc": "cd ./src/proof-of-concept && npm install",
    "ci:install": "RUNNING_ENV=CI npm ci && unset RUNNING_ENV && npm run ci:postinstall",
    "ci:postinstall": "npm-run-all -p ci:sdk ci:server ci:admin-panel && npm run ci:poc",
    "ci:sdk": "cd ./src/userbase-js && npm ci",
    "ci:server": "cd ./src/userbase-server && npm ci",
    "ci:admin-panel": "cd ./src/userbase-server/admin-panel && npm ci",
    "ci:poc": "cd ./src/proof-of-concept && npm ci",
    "ci:start": "USERNAME=runner LOG_LEVEL=warn npm run watch:server",
    "clean": "rm -Rf ./src/proof-of-concept/build ./src/proof-of-concept/dist ./src/userbase-server/admin-panel/dist",
    "build": "npm run clean && npm-run-all -p build:client build:server build:admin-panel && npm run copy:admin-panel:to-build",
    "build:client": "cd ./src/proof-of-concept && npm run build:client",
    "build:server": "cd ./src/proof-of-concept && npm run build:server",
    "build:admin-panel": "cd ./src/userbase-server/admin-panel && npm run build",
    "copy:admin-panel:to-build": "mkdir ./src/proof-of-concept/build/node_modules/userbase-server/admin-panel && cp -R ./src/userbase-server/admin-panel/dist ./src/proof-of-concept/build/node_modules/userbase-server/admin-panel/dist",
    "start": "npm-run-all -r -p watch:client watch:server watch:admin-panel watch:userbase-js",
    "start:prod": "npm stop && node ./node_modules/forever/bin/forever --minUptime 5000 --spinSleepTime 1000 -l ../logs/encd.log -p $(pwd) -a start ./src/proof-of-concept/build/app.js",
    "stop": "node ./node_modules/forever/bin/forever stopall",
    "watch:client": "cd ./src/proof-of-concept && npm run watch:client",
    "watch:server": "NODE_ENV=development nodemon --exec 'babel-node ./src/proof-of-concept/server/app.js --presets @babel/preset-env' | pino-pretty",
    "watch:admin-panel": "cd ./src/userbase-server/admin-panel && npm run start",
    "watch:userbase-js": "cd src/userbase-js && npm run watch",
    "deploy:infra": "./deploy/deploy-infra.sh",
    "rm:root": "rm -rf node_modules package-lock.json",
    "rm:sdk": "cd ./src/userbase-js && rm -rf node_modules package-lock.json",
    "rm:server": "cd ./src/userbase-server && rm -rf node_modules package-lock.json",
    "rm:poc": "cd ./src/proof-of-concept && rm -rf node_modules package-lock.json",
    "rm:all": "npm-run-all -p rm:root rm:sdk rm:server rm:poc",
    "build:userbase-js:npm": "cd src/userbase-js && npm-run-all -p build:esm build:cjs build:window",
    "patch:userbase-js:npm": "cd src/userbase-js && npm run patch",
    "publish:userbase-js:npm": "cd src/userbase-js && npm publish",
    "build:userbase-server:npm": "npm-run-all -p transpile:userbase-server:npm build:admin-panel && npm run copy:admin-panel:to-npm-build",
    "transpile:userbase-server:npm": "babel src/userbase-server/ --presets=@babel/preset-env --plugins=@babel/transform-runtime --out-dir ./npm_build/userbase-server --source-maps --ignore src/userbase-server/node_modules,src/userbase-server/admin-panel/ && npm run copy:userbase-server:files",
    "copy:userbase-server:files": "rsync -am --exclude='*.js' --exclude='node_modules' --exclude='admin-panel' ./src/userbase-server/ ./npm_build/userbase-server",
    "copy:admin-panel:to-npm-build": "mkdir -p ./npm_build/userbase-server/admin-panel/dist && cp -R ./src/userbase-server/admin-panel/dist/ ./npm_build/userbase-server/admin-panel/dist/",
    "patch:userbase-server:npm": "cd ./src/userbase-server && printf 'Input patch commit message: ' && read message && npm version patch -m '$message' && cd ../.. && npm run copy:userbase-server:files",
    "publish:userbase-server:npm": "cd ./npm_build/userbase-server && npm publish",
    "build:userbase-js:script": "cd src/userbase-js && npm run build:umd",
    "lint": "eslint .",
    "test:setup": "npm run build:userbase-js:script && npm run watch:server",
    "test": "npx cypress open & npm run test:setup",
    "test:concurrency": "npm run build:userbase-js:script && sh ./test/start.sh"
  },
  "repository": "https://github.com/encrypted-dev/userbase",
  "keywords": [],
  "author": "",
  "license": "MIT",
  "engines": {
    "node": ">=4.3.2"
  },
  "devDependencies": {
    "@babel/cli": "^7.6.2",
    "@babel/core": "^7.4.5",
    "@babel/node": "^7.4.5",
    "@babel/plugin-transform-runtime": "^7.6.2",
    "@babel/preset-env": "^7.4.5",
    "babel-eslint": "^10.0.1",
    "babel-loader": "^8.3.0",
    "babel-plugin-emotion": "^10.0.23",
    "css-loader": "^6.7.3",
    "cypress": "^6.2.1",
    "cypress-skip-and-only-ui": "^1.2.6",
    "eslint": "^6.7.2",
    "eslint-loader": "^4.0.2",
    "eslint-plugin-compat": "^3.5.1",
    "eslint-plugin-cypress": "^2.7.0",
    "eslint-plugin-es5": "^1.5.0",
    "eslint-plugin-react": "^7.16.0",
    "forever": "^1.0.0",
    "http-server": "^0.12.0",
    "nodemon": "^2.0.20",
    "npm-run-all": "^4.1.5",
    "pino-pretty": "^3.2.0",
    "source-map-loader": "^4.0.1",
    "style-loader": "^1.0.0",
    "webpack": "^5.75.0",
    "webpack-cli": "^5.0.1"
  },
  "optionalDependencies": {
    "bufferutil": "^4.0.1",
    "utf-8-validate": "^5.0.2"
  }
}
